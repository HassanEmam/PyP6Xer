name: Build and Publish to PyPI

on:
  push:
    tags:
      - 'v*'  # Trigger on version tags like v1.0.0
  release:
    types: [published]
  workflow_dispatch:  # Allow manual triggering

jobs:
  build:
    name: Build distribution ðŸ“¦
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      
    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'
        
    - name: Install build dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install build twine check-manifest
        
    - name: Check MANIFEST.in
      run: check-manifest
      
    - name: Build package
      run: python -m build
      
    - name: Check distribution
      run: |
        python -m twine check dist/*
        
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: dist
        path: dist/

  test-install:
    name: Test installation
    needs: build
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        python-version: ['3.8', '3.9', '3.10', '3.11', '3.12']
        
    steps:
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v5
      with:
        python-version: ${{ matrix.python-version }}
        
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Install package from wheel
      run: |
        python -m pip install --upgrade pip
        python -m pip install dist/*.whl
        
    - name: Test import
      run: |
        python -c "import xerparser; print(f'PyP6XER version: {xerparser.__version__}')"
        python -c "from xerparser.reader import Reader; print('Import successful')"

  publish-testpypi:
    name: Publish to TestPyPI ðŸ§ª
    needs: [build, test-install]
    runs-on: ubuntu-latest
    if: github.event_name == 'workflow_dispatch' || (github.event_name == 'push' && startsWith(github.ref, 'refs/tags/'))
    environment:
      name: testpypi
      url: https://test.pypi.org/p/PyP6XER
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to TestPyPI
      uses: pypa/gh-action-pypi-publish@release/v1
      with:
        repository-url: https://test.pypi.org/legacy/

  publish-pypi:
    name: Publish to PyPI ðŸš€
    needs: [build, test-install, publish-testpypi]
    runs-on: ubuntu-latest
    if: github.event_name == 'release' && github.event.action == 'published'
    environment:
      name: pypi
      url: https://pypi.org/p/PyP6XER
    permissions:
      id-token: write  # IMPORTANT: this permission is mandatory for trusted publishing
      
    steps:
    - name: Download build artifacts
      uses: actions/download-artifact@v4
      with:
        name: dist
        path: dist/
        
    - name: Publish to PyPI
      uses: pypa/gh-action-pypi-publish@release/v1
